set-option -g focus-events on

set -g default-terminal 'screen-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

set -g history-limit 500000
set -sg escape-time 5

# Easy reloading of the tmux.conf configuration file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# resize panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Seamless aviation using vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Restore clear screen keybind mapped over by tmux-navigator
bind C-l send-keys C-l

# Use emacs / readline key-bindings in the tmux command prompt
set-option -g status-keys "emacs"

# Allow the session name in status left to display up to 50 characters
set-option -g status-left-length 50

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
unbind -T copy-mode-vi Escape
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi Enter send -X copy-pipe "pbcopy"\; send -X cancel

# More intuitive pane splitting key-bindings, open all in current path
bind-key - split-window -v  -c '#{pane_current_path}'
bind-key \\ split-window -h  -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# break a pane into a new window
bind-key b break-pane -d

# jump to another session
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# run tat from current folder and enter that session
bind-key C-b send-keys 'tat && exit' 'C-m'

# show gitsh in side pane
bind g split-window -c "#{pane_current_path}" -h -p 50 'gitsh'

set -g status-left  " #[fg=bold]#S "

set -g clock-mode-style 24

#+---------+
#+ Options +
#+---------+
set -g status-interval 1
set -g status on

#+--------+
#+ Status +
#+--------+
#+--- Layout ---+
set -g status-justify left

#+-------+
#+ Panes +
#+-------+
set -g display-panes-colour "#282c34"
set -g display-panes-active-colour "#282c34"

#+------------+
#+ Clock Mode +
#+------------+
setw -g clock-mode-colour "#61afef"

#+--------+
#+ Status +
#+--------+
#+--- Bars ---+
#set -g status-left "#[fg=black,bg=blue,bold] #S#[fg=blue,bg=black,nobold,noitalics,nounderscore]"
set -g status-left "#[fg=#282c34,bg=blue,bold] #S #[fg=blue,bg=#282c34,nobold,noitalics,nounderscore]"
set -g status-right "#[fg=#61afef,bg=#282c34,nobold,noitalics,nounderscore]#[fg=#282c34,bg=#61afef,bold] #h "

#+--- Windows ---+
set -g window-status-format "#[fg=#282c34,bg=#282c34,nobold,noitalics,nounderscore] #[fg=#aab2bf,bg=#282c34]#I #[fg=white,bg=#282c34,nobold,noitalics,nounderscore] #[fg=#aab2bf,bg=#282c34]#W #F #[fg=#282c34,bg=#282c34,nobold,noitalics,nounderscore]"
set -g window-status-current-format "#[fg=#282c34,bg=blue,nobold,noitalics,nounderscore] #[fg=#282c34,bg=#61afef,bold]#I #[fg=black,bg=#61afef,nobold,noitalics,nounderscore] #[fg=#282c34,bg=#61afef,bold]#W #F #[fg=#61afef,bg=#282c34,nobold,noitalics,nounderscore]"
set -g window-status-separator ""
set -g status-bg "#282c34"
